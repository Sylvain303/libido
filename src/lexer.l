/* 
 * lexer for parsing external source for collecting snippet of code.
 */

%{
/* generated by bison */
#include "bash_parser.tab.h"
%}

%{
int *nlines;
void p(char *what, char *val)
{
    if(what[0] == '<')
        printf("%d:\033[32;1m%s\033[0m:%s", *nlines, ++what, val);
    else
        printf("%d:\033[32;1m%s\033[0m:%s\n", *nlines, what, val);
}

#define RET(val) p(#val, yytext); return val
%}
    int num_lines = 1;


IDENTIFIER  [A-Za-z][A-Za-z0-9_]*
COMMENT     #
INDENT      ^[ \t]+

/* exclusive start condition */
%x comment libido
%%

<comment>libido:        p("<libido=>", ""); BEGIN(libido);
<comment>\n             ++num_lines; BEGIN(0);
<comment>.+             RET(COMMENT);

<libido>depend          RET(DEPEND);
<libido>{IDENTIFIER}    p("<ID", yytext);
<libido>\n              ++num_lines; BEGIN(0);
<libido>[[:blank:]]+    ;
<libido>.               p("<C", yytext); return yytext[0];


{COMMENT}               p("COM", yytext); BEGIN(comment);
{IDENTIFIER}            RET(IDENTIFIER);
{INDENT}                RET(INDENT);
[[:blank:]]+            ;
\n                      ++num_lines;
.                       p("<c", yytext); return yytext[0];

%%
